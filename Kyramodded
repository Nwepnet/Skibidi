-- Load the script from the URL
loadstring(game:HttpGet("https://raw.githubusercontent.com/Nwepnet/Skibidi/refs/heads/main/protectgojo1-1.txt", true))()

-- Set time delay
getgenv().Time = 0.5

-- Define accessory IDs
getgenv().Torso = {
    93236274836969
}

getgenv().RightArm = {
    105883079467231
}

getgenv().LeftArm = {
    80164669452133
}

getgenv().Head = {
    15312795527
}

-- Utility function to create welds and ensure parts are not anchored or colliding
local function weldParts(part0, part1, c0, c1)
    part1.Anchored = false -- Ensure part1 is not anchored
    part1.CanCollide = false -- Disable collision for part1

    local weld = Instance.new("Weld")
    weld.Part0 = part0
    weld.Part1 = part1
    weld.C0 = c0
    weld.C1 = c1
    weld.Parent = part0
    return weld
end

-- Function to find specific attachments in a character's part
local function findAttachment(rootPart, name)
    for _, descendant in pairs(rootPart:GetDescendants()) do
        if descendant:IsA("Attachment") and descendant.Name == name then
            return descendant
        end
    end
end

-- Function to add an accessory to a character part
local function addAccessoryToCharacter(accessoryId, parentPart)
    local accessory = game:GetObjects("rbxassetid://" .. tostring(accessoryId))[1]
    local character = game.Players.LocalPlayer.Character

    accessory.Parent = game.Workspace
    local handle = accessory:FindFirstChild("Handle")

    if handle then
        handle.Anchored = false
        handle.CanCollide = false -- Disable collision for the handle

        local attachment = handle:FindFirstChildOfClass("Attachment")
        if attachment then
            local parentAttachment = findAttachment(parentPart, attachment.Name)
            if parentAttachment then
                weldParts(parentPart, handle, parentAttachment.CFrame, attachment.CFrame)
            end
        else
            local attachmentPoint = accessory:FindFirstChild("AttachmentPoint")
            if attachmentPoint then
                weldParts(parentPart, handle, CFrame.new(0, 0.5, 0), attachmentPoint.CFrame)
            end
        end
    end

    accessory.Parent = character
end

-- Function triggered when character is added
local function onCharacterAdded(character)
    wait(getgenv().Time)

    for _, accessoryId in ipairs(getgenv().Head) do
        addAccessoryToCharacter(accessoryId, character:FindFirstChild("Head"))
    end

    local torsoPart = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")
    if torsoPart then
        for _, accessoryId in ipairs(getgenv().Torso) do
            addAccessoryToCharacter(accessoryId, torsoPart)
        end
    end

    local rightArm = character:FindFirstChild("RightUpperArm") or character:FindFirstChild("Right Arm")
    if rightArm then
        for _, accessoryId in ipairs(getgenv().RightArm) do
            addAccessoryToCharacter(accessoryId, rightArm)
        end
    end

    local leftArm = character:FindFirstChild("LeftUpperArm") or character:FindFirstChild("Left Arm")
    if leftArm then
        for _, accessoryId in ipairs(getgenv().LeftArm) do
            addAccessoryToCharacter(accessoryId, leftArm)
        end
    end
end

-- Connect the character added event
game.Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

-- Apply the function if character already exists
if game.Players.LocalPlayer.Character then
    onCharacterAdded(game.Players.LocalPlayer.Character)
end
